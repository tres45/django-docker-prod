version: '3.7'

services:
  nginx:
    build: ./nginx
    container_name: nginx
    image: 'osad4iy91/webapp-nginx:${NGINX_TAG}'
    volumes:
      - app:/home/app/web
    networks:
      - webapp_net
    ports:
      - 80:80
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  web:
    build: ./app
    container_name: web
    image: 'osad4iy91/webapp-web:${WEB_TAG}'
    command: gunicorn hello_django.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - app:/home/app/web
    networks:
      - webapp_net
    ports:
      - 8000
    environment:
      - DEBUG=${DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_LOGIN=${DJANGO_LOGIN}
      - DJANGO_PASS=${DJANGO_PASS}
      - REDIS_HOST=${REDIS_HOST}
      - DATABASE=${DATABASE}
      - PG_ENGINE=${PG_ENGINE}
      - PG_HOST=${PG_HOST}
      - PG_PORT=${PG_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  redis:
    container_name: redis
    image: redis:6.0.5-alpine
    volumes:
      - redis_data:/data
    networks:
      - webapp_net
    ports:
      - 6379:6379
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  postgres:
    container_name: postgres
    image: postgres:12.0-alpine
    volumes:
      - postgres_backups:/backup
      - postgres_data:/var/lib/postgresql
    networks:
      - webapp_net
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
       - pgadmin:/root/.pgadmin
    networks:
      - webapp_net
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s

networks:
  webapp_net:
    external:
      name: mynet

volumes:
  app:
  postgres_backups:
  postgres_data:
  pgadmin:
  redis_data:
